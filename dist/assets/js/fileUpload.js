   
$(document).ready(()=>{
    var t = ""
    var e = ""
    var i = data
    upload(t,e,i)
})   

function data() {
    
}
   
function upload(t, e, i) {
        "use strict"; (function (t) {
        
                l = function (t) {
                    function l(t, i) {
                        n(this, l); var r = e(this, (l.__proto__ || Object.getPrototypeOf(l)).call(this)), a = void 0, o = void 0; if (r.element = t, r.version = l.version, r.defaultOptions.previewTemplate = r.defaultOptions.previewTemplate.replace(/\n*/g, ""), r.clickableElements = [], r.listeners = [], r.files = [], "string" == typeof r.element && (r.element = document.querySelector(r.element)), !r.element || null == r.element.nodeType) throw new Error("Invalid dropzone element."); if (r.element.dropzone) throw new Error("Dropzone already attached."); l.instances.push(r), r.element.dropzone = r; var s = null != (o = l.optionsForElement(r.element)) ? o : {}; if (r.options = l.extend({}, r.defaultOptions, s, null != i ? i : {}), r.options.forceFallback || !l.isBrowserSupported()) { var u; return u = r.options.fallback.call(r), e(r, u) } if (null == r.options.url && (r.options.url = r.element.getAttribute("action")), !r.options.url) throw new Error("No URL provided."); if (r.options.acceptedFiles && r.options.acceptedMimeTypes) throw new Error("You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated."); if (r.options.uploadMultiple && r.options.chunking) throw new Error("You cannot set both: uploadMultiple and chunking."); return r.options.acceptedMimeTypes && (r.options.acceptedFiles = r.options.acceptedMimeTypes, delete r.options.acceptedMimeTypes), null != r.options.renameFilename && (r.options.renameFile = function (t) { return r.options.renameFilename.call(r, t.name, t) }), r.options.method = r.options.method.toUpperCase(), (a = r.getExistingFallback()) && a.parentNode && a.parentNode.removeChild(a), r.options.previewsContainer !== !1 && (r.options.previewsContainer ? r.previewsContainer = l.getElement(r.options.previewsContainer, "previewsContainer") : r.previewsContainer = r.element), r.options.clickable && (r.options.clickable === !0 ? r.clickableElements = [r.element] : r.clickableElements = l.getElements(r.options.clickable, "clickable")), r.init(), r
                    } return i(l, t), o(l, null, [{ key: "initClass", value: function () { this.prototype.Emitter = s, this.prototype.events = ["drop", "dragstart", "dragend", "dragenter", "dragover", "dragleave", "addedfile", "addedfiles", "removedfile", "thumbnail", "error", "errormultiple", "processing", "processingmultiple", "uploadprogress", "totaluploadprogress", "sending", "sendingmultiple", "success", "successmultiple", "canceled", "canceledmultiple", "complete", "completemultiple", "reset", "maxfilesexceeded", "maxfilesreached", "queuecomplete"], this.prototype.defaultOptions = { url: null, method: "post", withCredentials: !1, timeout: 3e4, parallelUploads: 2, uploadMultiple: !1, chunking: !1, forceChunking: !1, chunkSize: 2e6, parallelChunkUploads: !1, retryChunks: !1, retryChunksLimit: 3, maxFilesize: 256, paramName: "file", createImageThumbnails: !0, maxThumbnailFilesize: 10, thumbnailMethod: "crop", resizeWidth: null, resizeHeight: null, resizeMimeType: null, resizeQuality: .8, resizeMethod: "contain", filesizeBase: 1e3, maxFiles: null, headers: null, clickable: !0, ignoreHiddenFiles: !0, acceptedFiles: null, acceptedMimeTypes: null, autoProcessQueue: !0, autoQueue: !0, addRemoveLinks: !1, previewsContainer: null, hiddenInputContainer: "body", capture: null, renameFilename: null, renameFile: null, forceFallback: !1, dictDefaultMessage: "Drop files here to upload", dictFallbackMessage: "Your browser does not support drag'n'drop file uploads.", dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.", dictFileTooBig: "File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.", dictInvalidFileType: "You can't upload files of this type.", dictResponseError: "Server responded with {{statusCode}} code.", dictCancelUpload: "Cancel upload", dictUploadCanceled: "Upload canceled.", dictCancelUploadConfirmation: "Are you sure you want to cancel this upload?", dictRemoveFile: "Supprimer", dictRemoveFileConfirmation: null, dictMaxFilesExceeded: "You can not upload any more files.", dictFileSizeUnits: { tb: "TB", gb: "GB", mb: "MB", kb: "KB", b: "b" }, init: function () { }, params: function (t, e, i) { if (i) return { dzuuid: i.file.upload.uuid, dzchunkindex: i.index, dztotalfilesize: i.file.size, dzchunksize: this.options.chunkSize, dztotalchunkcount: i.file.upload.totalChunkCount, dzchunkbyteoffset: i.index * this.options.chunkSize } }, accept: function (t, e) { return e() }, chunksUploaded: function (t, e) { e() }, fallback: function () { var t = void 0; this.element.className = this.element.className + " dz-browser-not-supported"; for (var e = this.element.getElementsByTagName("div"), i = !0, n = 0, e = i ? e : e[Symbol.iterator](); ;){ var r; if (i) { if (n >= e.length) break; r = e[n++] } else { if (n = e.next(), n.done) break; r = n.value } var a = r; if (/(^| )dz-message($| )/.test(a.className)) { t = a, a.className = "dz-message"; break } } t || (t = l.createElement('<div class="dz-message"><span></span></div>'), this.element.appendChild(t)); var o = t.getElementsByTagName("span")[0]; return o && (null != o.textContent ? o.textContent = this.options.dictFallbackMessage : null != o.innerText && (o.innerText = this.options.dictFallbackMessage)), this.element.appendChild(this.getFallbackForm()) }, resize: function (t, e, i, n) { var r = { srcX: 0, srcY: 0, srcWidth: t.width, srcHeight: t.height }, a = t.width / t.height; null == e && null == i ? (e = r.srcWidth, i = r.srcHeight) : null == e ? e = i * a : null == i && (i = e / a), e = Math.min(e, r.srcWidth), i = Math.min(i, r.srcHeight); var o = e / i; if (r.srcWidth > e || r.srcHeight > i) if ("crop" === n) a > o ? (r.srcHeight = t.height, r.srcWidth = r.srcHeight * o) : (r.srcWidth = t.width, r.srcHeight = r.srcWidth / o); else { if ("contain" !== n) throw new Error("Unknown resizeMethod '" + n + "'"); a > o ? i = e / a : e = i * a } return r.srcX = (t.width - r.srcWidth) / 2, r.srcY = (t.height - r.srcHeight) / 2, r.trgWidth = e, r.trgHeight = i, r }, transformFile: function (t, e) { return (this.options.resizeWidth || this.options.resizeHeight) && t.type.match(/image.*/) ? this.resizeImage(t, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, e) : e(t) }, previewTemplate: '<div class="dz-preview dz-file-preview">\n  <div class="dz-image"><img data-dz-thumbnail /></div>\n  <div class="dz-details">\n    <div class="dz-size"><span data-dz-size></span></div>\n    <div class="dz-filename"><span data-dz-name></span></div>\n  </div>\n  <div class="dz-progress"><span class="dz-upload" data-dz-uploadprogress></span></div>\n  <div class="dz-error-message"><span data-dz-errormessage></span></div>\n  <div class="dz-success-mark">\n    <svg width="54px" height="54px" viewBox="0 0 54 54" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">\n      <title>Check</title>\n      <defs></defs>\n      <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage">\n        <path d="M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z" id="Oval-2" stroke-opacity="0.198794158" stroke="#747474" fill-opacity="0.816519475" fill="#FFFFFF" sketch:type="MSShapeGroup"></path>\n      </g>\n    </svg>\n  </div>\n  <div class="dz-error-mark">\n    <svg width="54px" height="54px" viewBox="0 0 54 54" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">\n      <title>Error</title>\n      <defs></defs>\n      <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage">\n        <g id="Check-+-Oval-2" sketch:type="MSLayerGroup" stroke="#747474" stroke-opacity="0.198794158" fill="#FFFFFF" fill-opacity="0.816519475">\n          <path d="M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z" id="Oval-2" sketch:type="MSShapeGroup"></path>\n        </g>\n      </g>\n    </svg>\n  </div>\n</div>', drop: function (t) { return this.element.classList.remove("dz-drag-hover") }, dragstart: function (t) { }, dragend: function (t) { return this.element.classList.remove("dz-drag-hover") }, dragenter: function (t) { return this.element.classList.add("dz-drag-hover") }, dragover: function (t) { return this.element.classList.add("dz-drag-hover") }, dragleave: function (t) { return this.element.classList.remove("dz-drag-hover") }, paste: function (t) { }, reset: function () { return this.element.classList.remove("dz-started") }, addedfile: function (t) { var e = this; if (this.element === this.previewsContainer && this.element.classList.add("dz-started"), this.previewsContainer) { t.previewElement = l.createElement(this.options.previewTemplate.trim()), t.previewTemplate = t.previewElement, this.previewsContainer.appendChild(t.previewElement); for (var i = t.previewElement.querySelectorAll("[data-dz-name]"), n = !0, r = 0, i = n ? i : i[Symbol.iterator](); ;){ var a; if (n) { if (r >= i.length) break; a = i[r++] } else { if (r = i.next(), r.done) break; a = r.value } var o = a; o.textContent = t.name } for (var s = t.previewElement.querySelectorAll("[data-dz-size]"), u = !0, h = 0, s = u ? s : s[Symbol.iterator](); ;){ if (u) { if (h >= s.length) break; o = s[h++] } else { if (h = s.next(), h.done) break; o = h.value } o.innerHTML = this.filesize(t.size) } this.options.addRemoveLinks && (t._removeLink = l.createElement('<a class="dz-remove" href="javascript:undefined;" data-dz-remove>' + this.options.dictRemoveFile + "</a>"), t.previewElement.appendChild(t._removeLink)); for (var c = function (i) { return i.preventDefault(), i.stopPropagation(), t.status === l.UPLOADING ? l.confirm(e.options.dictCancelUploadConfirmation, function () { return e.removeFile(t) }) : e.options.dictRemoveFileConfirmation ? l.confirm(e.options.dictRemoveFileConfirmation, function () { return e.removeFile(t) }) : e.removeFile(t) }, d = t.previewElement.querySelectorAll("[data-dz-remove]"), p = !0, f = 0, d = p ? d : d[Symbol.iterator](); ;){ var g; if (p) { if (f >= d.length) break; g = d[f++] } else { if (f = d.next(), f.done) break; g = f.value } var m = g; m.addEventListener("click", c) } } }, removedfile: function (t) { return null != t.previewElement && null != t.previewElement.parentNode && t.previewElement.parentNode.removeChild(t.previewElement), this._updateMaxFilesReachedClass() }, thumbnail: function (t, e) { if (t.previewElement) { t.previewElement.classList.remove("dz-file-preview"); for (var i = t.previewElement.querySelectorAll("[data-dz-thumbnail]"), n = !0, r = 0, i = n ? i : i[Symbol.iterator](); ;){ var a; if (n) { if (r >= i.length) break; a = i[r++] } else { if (r = i.next(), r.done) break; a = r.value } var o = a; o.alt = t.name, o.src = e } return setTimeout(function () { return t.previewElement.classList.add("dz-image-preview") }, 1) } }, error: function (t, e) { if (t.previewElement) { t.previewElement.classList.add("dz-error"), "String" != typeof e && e.error && (e = e.error); for (var i = t.previewElement.querySelectorAll("[data-dz-errormessage]"), n = !0, r = 0, i = n ? i : i[Symbol.iterator](); ;){ var a; if (n) { if (r >= i.length) break; a = i[r++] } else { if (r = i.next(), r.done) break; a = r.value } var o = a; o.textContent = e } } }, errormultiple: function () { }, processing: function (t) { if (t.previewElement && (t.previewElement.classList.add("dz-processing"), t._removeLink)) return t._removeLink.textContent = this.options.dictCancelUpload }, processingmultiple: function () { }, uploadprogress: function (t, e, i) { if (t.previewElement) for (var n = t.previewElement.querySelectorAll("[data-dz-uploadprogress]"), r = !0, a = 0, n = r ? n : n[Symbol.iterator](); ;){ var o; if (r) { if (a >= n.length) break; o = n[a++] } else { if (a = n.next(), a.done) break; o = a.value } var s = o; "PROGRESS" === s.nodeName ? s.value = e : s.style.width = e + "%" } }, totaluploadprogress: function () { }, sending: function () { }, sendingmultiple: function () { }, success: function (t) { if (t.previewElement) return t.previewElement.classList.add("dz-success") }, successmultiple: function () { }, canceled: function (t) { return this.emit("error", t, this.options.dictUploadCanceled) }, canceledmultiple: function () { }, complete: function (t) { if (t._removeLink && (t._removeLink.textContent = this.options.dictRemoveFile), t.previewElement) return t.previewElement.classList.add("dz-complete") }, completemultiple: function () { }, maxfilesexceeded: function () { }, maxfilesreached: function () { }, queuecomplete: function () { }, addedfiles: function () { } }, this.prototype._thumbnailQueue = [], this.prototype._processingThumbnail = !1 } }, { key: "extend", value: function (t) { for (var e = arguments.length, i = Array(e > 1 ? e - 1 : 0), n = 1; n < e; n++)i[n - 1] = arguments[n]; for (var r = i, a = !0, o = 0, r = a ? r : r[Symbol.iterator](); ;){ var s; if (a) { if (o >= r.length) break; s = r[o++] } else { if (o = r.next(), o.done) break; s = o.value } var l = s; for (var u in l) { var h = l[u]; t[u] = h } } return t } }]), o(l, [{ key: "getAcceptedFiles", value: function () { return this.files.filter(function (t) { return t.accepted }).map(function (t) { return t }) } }, { key: "getRejectedFiles", value: function () { return this.files.filter(function (t) { return !t.accepted }).map(function (t) { return t }) } }, { key: "getFilesWithStatus", value: function (t) { return this.files.filter(function (e) { return e.status === t }).map(function (t) { return t }) } }, { key: "getQueuedFiles", value: function () { return this.getFilesWithStatus(l.QUEUED) } }, { key: "getUploadingFiles", value: function () { return this.getFilesWithStatus(l.UPLOADING) } }, { key: "getAddedFiles", value: function () { return this.getFilesWithStatus(l.ADDED) } }, { key: "getActiveFiles", value: function () { return this.files.filter(function (t) { return t.status === l.UPLOADING || t.status === l.QUEUED }).map(function (t) { return t }) } }, { key: "init", value: function () { var t = this; if ("form" === this.element.tagName && this.element.setAttribute("enctype", "multipart/form-data"), this.element.classList.contains("dropzone") && !this.element.querySelector(".dz-message") && this.element.appendChild(l.createElement('<div class="dz-default dz-message"><span>' + this.options.dictDefaultMessage + "</span></div>")), this.clickableElements.length) { var e = function u() { return t.hiddenFileInput && t.hiddenFileInput.parentNode.removeChild(t.hiddenFileInput), t.hiddenFileInput = document.createElement("input"), t.hiddenFileInput.setAttribute("type", "file"), (null === t.options.maxFiles || t.options.maxFiles > 1) && t.hiddenFileInput.setAttribute("multiple", "multiple"), t.hiddenFileInput.className = "dz-hidden-input", null !== t.options.acceptedFiles && t.hiddenFileInput.setAttribute("accept", t.options.acceptedFiles), null !== t.options.capture && t.hiddenFileInput.setAttribute("capture", t.options.capture), t.hiddenFileInput.style.visibility = "hidden", t.hiddenFileInput.style.position = "absolute", t.hiddenFileInput.style.top = "0", t.hiddenFileInput.style.left = "0", t.hiddenFileInput.style.height = "0", t.hiddenFileInput.style.width = "0", document.querySelector(t.options.hiddenInputContainer).appendChild(t.hiddenFileInput), t.hiddenFileInput.addEventListener("change", function () { var e = t.hiddenFileInput.files; if (e.length) for (var i = e, n = !0, r = 0, i = n ? i : i[Symbol.iterator](); ;){ var a; if (n) { if (r >= i.length) break; a = i[r++] } else { if (r = i.next(), r.done) break; a = r.value } var o = a; t.addFile(o) } return t.emit("addedfiles", e), u() }) }; e() } this.URL = null !== window.URL ? window.URL : window.webkitURL; for (var i = this.events, n = !0, r = 0, i = n ? i : i[Symbol.iterator](); ;){ var a; if (n) { if (r >= i.length) break; a = i[r++] } else { if (r = i.next(), r.done) break; a = r.value } var o = a; this.on(o, this.options[o]) } this.on("uploadprogress", function () { return t.updateTotalUploadProgress() }), this.on("removedfile", function () { return t.updateTotalUploadProgress() }), this.on("canceled", function (e) { return t.emit("complete", e) }), this.on("complete", function (e) { if (0 === t.getAddedFiles().length && 0 === t.getUploadingFiles().length && 0 === t.getQueuedFiles().length) return setTimeout(function () { return t.emit("queuecomplete") }, 0) }); var s = function (t) { return t.stopPropagation(), t.preventDefault ? t.preventDefault() : t.returnValue = !1 }; return this.listeners = [{ element: this.element, events: { dragstart: function (e) { return t.emit("dragstart", e) }, dragenter: function (e) { return s(e), t.emit("dragenter", e) }, dragover: function (e) { var i = void 0; try { i = e.dataTransfer.effectAllowed } catch (n) { } return e.dataTransfer.dropEffect = "move" === i || "linkMove" === i ? "move" : "copy", s(e), t.emit("dragover", e) }, dragleave: function (e) { return t.emit("dragleave", e) }, drop: function (e) { return s(e), t.drop(e) }, dragend: function (e) { return t.emit("dragend", e) } } }], this.clickableElements.forEach(function (e) { return t.listeners.push({ element: e, events: { click: function (i) { return (e !== t.element || i.target === t.element || l.elementInside(i.target, t.element.querySelector(".dz-message"))) && t.hiddenFileInput.click(), !0 } } }) }), this.enable(), this.options.init.call(this) } }, { key: "destroy", value: function () { return this.disable(), this.removeAllFiles(!0), (null != this.hiddenFileInput ? this.hiddenFileInput.parentNode : void 0) && (this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput), this.hiddenFileInput = null), delete this.element.dropzone, l.instances.splice(l.instances.indexOf(this), 1) } }, { key: "updateTotalUploadProgress", value: function () { var t = void 0, e = 0, i = 0, n = this.getActiveFiles(); if (n.length) { for (var r = this.getActiveFiles(), a = !0, o = 0, r = a ? r : r[Symbol.iterator](); ;){ var s; if (a) { if (o >= r.length) break; s = r[o++] } else { if (o = r.next(), o.done) break; s = o.value } var l = s; e += l.upload.bytesSent, i += l.upload.total } t = 100 * e / i } else t = 100; return this.emit("totaluploadprogress", t, i, e) } }, { key: "_getParamName", value: function (t) { return "function" == typeof this.options.paramName ? this.options.paramName(t) : "" + this.options.paramName + (this.options.uploadMultiple ? "[" + t + "]" : "") } }, { key: "_renameFile", value: function (t) { return "function" != typeof this.options.renameFile ? t.name : this.options.renameFile(t) } }, { key: "getFallbackForm", value: function () { var t = void 0, e = void 0; if (t = this.getExistingFallback()) return t; var i = '<div class="dz-fallback">'; this.options.dictFallbackText && (i += "<p>" + this.options.dictFallbackText + "</p>"), i += '<input type="file" name="' + this._getParamName(0) + '" ' + (this.options.uploadMultiple ? 'multiple="multiple"' : void 0) + ' /><input type="submit" value="Upload!"></div>'; var n = l.createElement(i); return "FORM" !== this.element.tagName ? (e = l.createElement('<form action="' + this.options.url + '" enctype="multipart/form-data" method="' + this.options.method + '"></form>'), e.appendChild(n)) : (this.element.setAttribute("enctype", "multipart/form-data"), this.element.setAttribute("method", this.options.method)), null != e ? e : n } }, { key: "getExistingFallback", value: function () { for (var t = function (t) { for (var e = t, i = !0, n = 0, e = i ? e : e[Symbol.iterator](); ;){ var r; if (i) { if (n >= e.length) break; r = e[n++] } else { if (n = e.next(), n.done) break; r = n.value } var a = r; if (/(^| )fallback($| )/.test(a.className)) return a } }, e = ["div", "form"], i = 0; i < e.length; i++){ var n, r = e[i]; if (n = t(this.element.getElementsByTagName(r))) return n } } }, { key: "setupEventListeners", value: function () { return this.listeners.map(function (t) { return function () { var e = []; for (var i in t.events) { var n = t.events[i]; e.push(t.element.addEventListener(i, n, !1)) } return e }() }) } }, { key: "removeEventListeners", value: function () { return this.listeners.map(function (t) { return function () { var e = []; for (var i in t.events) { var n = t.events[i]; e.push(t.element.removeEventListener(i, n, !1)) } return e }() }) } }, { key: "disable", value: function () { var t = this; return this.clickableElements.forEach(function (t) { return t.classList.remove("dz-clickable") }), this.removeEventListeners(), this.disabled = !0, this.files.map(function (e) { return t.cancelUpload(e) }) } }, { key: "enable", value: function () { return delete this.disabled, this.clickableElements.forEach(function (t) { return t.classList.add("dz-clickable") }), this.setupEventListeners() } }, { key: "filesize", value: function (t) { var e = 0, i = "b"; if (t > 0) { for (var n = ["tb", "gb", "mb", "kb", "b"], r = 0; r < n.length; r++){ var a = n[r], o = Math.pow(this.options.filesizeBase, 4 - r) / 10; if (t >= o) { e = t / Math.pow(this.options.filesizeBase, 4 - r), i = a; break } } e = Math.round(10 * e) / 10 } return "<strong>" + e + "</strong> " + this.options.dictFileSizeUnits[i] } }, { key: "_updateMaxFilesReachedClass", value: function () { return null != this.options.maxFiles && this.getAcceptedFiles().length >= this.options.maxFiles ? (this.getAcceptedFiles().length === this.options.maxFiles && this.emit("maxfilesreached", this.files), this.element.classList.add("dz-max-files-reached")) : this.element.classList.remove("dz-max-files-reached") } }, { key: "drop", value: function (t) { if (t.dataTransfer) { this.emit("drop", t); for (var e = [], i = 0; i < t.dataTransfer.files.length; i++)e[i] = t.dataTransfer.files[i]; if (this.emit("addedfiles", e), e.length) { var n = t.dataTransfer.items; n && n.length && null != n[0].webkitGetAsEntry ? this._addFilesFromItems(n) : this.handleFiles(e) } } } }, { key: "paste", value: function (t) { if (null != r(null != t ? t.clipboardData : void 0, function (t) { return t.items })) { this.emit("paste", t); var e = t.clipboardData.items; return e.length ? this._addFilesFromItems(e) : void 0 } } }, { key: "handleFiles", value: function (t) { for (var e = t, i = !0, n = 0, e = i ? e : e[Symbol.iterator](); ;){ var r; if (i) { if (n >= e.length) break; r = e[n++] } else { if (n = e.next(), n.done) break; r = n.value } var a = r; this.addFile(a) } } }, { key: "_addFilesFromItems", value: function (t) { var e = this; return function () { for (var i = [], n = t, r = !0, a = 0, n = r ? n : n[Symbol.iterator](); ;){ var o; if (r) { if (a >= n.length) break; o = n[a++] } else { if (a = n.next(), a.done) break; o = a.value } var s, l = o; null != l.webkitGetAsEntry && (s = l.webkitGetAsEntry()) ? s.isFile ? i.push(e.addFile(l.getAsFile())) : s.isDirectory ? i.push(e._addFilesFromDirectory(s, s.name)) : i.push(void 0) : null != l.getAsFile && (null == l.kind || "file" === l.kind) ? i.push(e.addFile(l.getAsFile())) : i.push(void 0) } return i }() } }, { key: "_addFilesFromDirectory", value: function (t, e) { var i = this, n = t.createReader(), r = function (t) { return a(console, "log", function (e) { return e.log(t) }) }, o = function s() { return n.readEntries(function (t) { if (t.length > 0) { for (var n = t, r = !0, a = 0, n = r ? n : n[Symbol.iterator](); ;){ var o; if (r) { if (a >= n.length) break; o = n[a++] } else { if (a = n.next(), a.done) break; o = a.value } var l = o; l.isFile ? l.file(function (t) { if (!i.options.ignoreHiddenFiles || "." !== t.name.substring(0, 1)) return t.fullPath = e + "/" + t.name, i.addFile(t) }) : l.isDirectory && i._addFilesFromDirectory(l, e + "/" + l.name) } s() } return null }, r) }; return o() } }, { key: "accept", value: function (t, e) { return t.size > 1024 * this.options.maxFilesize * 1024 ? e(this.options.dictFileTooBig.replace("{{filesize}}", Math.round(t.size / 1024 / 10.24) / 100).replace("{{maxFilesize}}", this.options.maxFilesize)) : l.isValidFile(t, this.options.acceptedFiles) ? null != this.options.maxFiles && this.getAcceptedFiles().length >= this.options.maxFiles ? (e(this.options.dictMaxFilesExceeded.replace("{{maxFiles}}", this.options.maxFiles)), this.emit("maxfilesexceeded", t)) : this.options.accept.call(this, t, e) : e(this.options.dictInvalidFileType) } }, { key: "addFile", value: function (t) { var e = this; return t.upload = { uuid: l.uuidv4(), progress: 0, total: t.size, bytesSent: 0, filename: this._renameFile(t), chunked: this.options.chunking && (this.options.forceChunking || t.size > this.options.chunkSize), totalChunkCount: Math.ceil(t.size / this.options.chunkSize) }, this.files.push(t), t.status = l.ADDED, this.emit("addedfile", t), this._enqueueThumbnail(t), this.accept(t, function (i) { return i ? (t.accepted = !1, e._errorProcessing([t], i)) : (t.accepted = !0, e.options.autoQueue && e.enqueueFile(t)), e._updateMaxFilesReachedClass() }) } }, { key: "enqueueFiles", value: function (t) { for (var e = t, i = !0, n = 0, e = i ? e : e[Symbol.iterator](); ;){ var r; if (i) { if (n >= e.length) break; r = e[n++] } else { if (n = e.next(), n.done) break; r = n.value } var a = r; this.enqueueFile(a) } return null } }, { key: "enqueueFile", value: function (t) { var e = this; if (t.status !== l.ADDED || t.accepted !== !0) throw new Error("This file can't be queued because it has already been processed or was rejected."); if (t.status = l.QUEUED, this.options.autoProcessQueue) return setTimeout(function () { return e.processQueue() }, 0) } }, { key: "_enqueueThumbnail", value: function (t) { var e = this; if (this.options.createImageThumbnails && t.type.match(/image.*/) && t.size <= 1024 * this.options.maxThumbnailFilesize * 1024) return this._thumbnailQueue.push(t), setTimeout(function () { return e._processThumbnailQueue() }, 0) } }, { key: "_processThumbnailQueue", value: function () { var t = this; if (!this._processingThumbnail && 0 !== this._thumbnailQueue.length) { this._processingThumbnail = !0; var e = this._thumbnailQueue.shift(); return this.createThumbnail(e, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, !0, function (i) { return t.emit("thumbnail", e, i), t._processingThumbnail = !1, t._processThumbnailQueue() }) } } }, { key: "removeFile", value: function (t) { if (t.status === l.UPLOADING && this.cancelUpload(t), this.files = u(this.files, t), this.emit("removedfile", t), 0 === this.files.length) return this.emit("reset") } }, { key: "removeAllFiles", value: function (t) { null == t && (t = !1); for (var e = this.files.slice(), i = !0, n = 0, e = i ? e : e[Symbol.iterator](); ;){ var r; if (i) { if (n >= e.length) break; r = e[n++] } else { if (n = e.next(), n.done) break; r = n.value } var a = r; (a.status !== l.UPLOADING || t) && this.removeFile(a) } return null } }, { key: "resizeImage", value: function (t, e, i, n, r) { var a = this; return this.createThumbnail(t, e, i, n, !1, function (e, i) { if (null == i) return r(t); var n = a.options.resizeMimeType; null == n && (n = t.type); var o = i.toDataURL(n, a.options.resizeQuality); return "image/jpeg" !== n && "image/jpg" !== n || (o = p.restore(t.dataURL, o)), r(l.dataURItoBlob(o)) }) } }, { key: "createThumbnail", value: function (t, e, i, n, r, a) { var o = this, s = new FileReader; return s.onload = function () { return t.dataURL = s.result, "image/svg+xml" === t.type ? void (null != a && a(s.result)) : o.createThumbnailFromUrl(t, e, i, n, r, a) }, s.readAsDataURL(t) } }, { key: "createThumbnailFromUrl", value: function (t, e, i, n, r, a, o) { var s = this, l = document.createElement("img"); return o && (l.crossOrigin = o), l.onload = function () { var o = function (t) { return t(1) }; return "undefined" != typeof EXIF && null !== EXIF && r && (o = function (t) { return EXIF.getData(l, function () { return t(EXIF.getTag(this, "Orientation")) }) }), o(function (r) { t.width = l.width, t.height = l.height; var o = s.options.resize.call(s, t, e, i, n), u = document.createElement("canvas"), h = u.getContext("2d"); switch (u.width = o.trgWidth, u.height = o.trgHeight, r > 4 && (u.width = o.trgHeight, u.height = o.trgWidth), r) { case 2: h.translate(u.width, 0), h.scale(-1, 1); break; case 3: h.translate(u.width, u.height), h.rotate(Math.PI); break; case 4: h.translate(0, u.height), h.scale(1, -1); break; case 5: h.rotate(.5 * Math.PI), h.scale(1, -1); break; case 6: h.rotate(.5 * Math.PI), h.translate(0, -u.height); break; case 7: h.rotate(.5 * Math.PI), h.translate(u.width, -u.height), h.scale(-1, 1); break; case 8: h.rotate(-.5 * Math.PI), h.translate(-u.width, 0) }d(h, l, null != o.srcX ? o.srcX : 0, null != o.srcY ? o.srcY : 0, o.srcWidth, o.srcHeight, null != o.trgX ? o.trgX : 0, null != o.trgY ? o.trgY : 0, o.trgWidth, o.trgHeight); var c = u.toDataURL("image/png"); if (null != a) return a(c, u) }) }, null != a && (l.onerror = a), l.src = t.dataURL } }, { key: "processQueue", value: function () { var t = this.options.parallelUploads, e = this.getUploadingFiles().length, i = e; if (!(e >= t)) { var n = this.getQueuedFiles(); if (n.length > 0) { if (this.options.uploadMultiple) return this.processFiles(n.slice(0, t - e)); for (; i < t;){ if (!n.length) return; this.processFile(n.shift()), i++ } } } } }, { key: "processFile", value: function (t) { return this.processFiles([t]) } }, { key: "processFiles", value: function (t) { for (var e = t, i = !0, n = 0, e = i ? e : e[Symbol.iterator](); ;){ var r; if (i) { if (n >= e.length) break; r = e[n++] } else { if (n = e.next(), n.done) break; r = n.value } var a = r; a.processing = !0, a.status = l.UPLOADING, this.emit("processing", a) } return this.options.uploadMultiple && this.emit("processingmultiple", t), this.uploadFiles(t) } }, { key: "_getFilesWithXhr", value: function (t) { var e = void 0; return e = this.files.filter(function (e) { return e.xhr === t }).map(function (t) { return t }) } }, { key: "cancelUpload", value: function (t) { if (t.status === l.UPLOADING) { for (var e = this._getFilesWithXhr(t.xhr), i = e, n = !0, r = 0, i = n ? i : i[Symbol.iterator](); ;){ var a; if (n) { if (r >= i.length) break; a = i[r++] } else { if (r = i.next(), r.done) break; a = r.value } var o = a; o.status = l.CANCELED } "undefined" != typeof t.xhr && t.xhr.abort(); for (var s = e, u = !0, h = 0, s = u ? s : s[Symbol.iterator](); ;){ var c; if (u) { if (h >= s.length) break; c = s[h++] } else { if (h = s.next(), h.done) break; c = h.value } var d = c; this.emit("canceled", d) } this.options.uploadMultiple && this.emit("canceledmultiple", e) } else t.status !== l.ADDED && t.status !== l.QUEUED || (t.status = l.CANCELED, this.emit("canceled", t), this.options.uploadMultiple && this.emit("canceledmultiple", [t])); if (this.options.autoProcessQueue) return this.processQueue() } }, { key: "resolveOption", value: function (t) { if ("function" == typeof t) { for (var e = arguments.length, i = Array(e > 1 ? e - 1 : 0), n = 1; n < e; n++)i[n - 1] = arguments[n]; return t.apply(this, i) } return t } }, { key: "uploadFile", value: function (t) { return this.uploadFiles([t]) } }, {
                    key: "uploadFiles", value: function (t) {
                        var e = this; this._transformFiles(t, function (i) {
                            if (t[0].upload.chunked) {
                                var n = t[0], r = i[0], a = 0;
n.upload.chunks=[];var o=function(){for(var i=0;void 0!==n.upload.chunks[i];)i++;if(!(i>=n.upload.totalChunkCount)){a++;var o=i*e.options.chunkSize,s=Math.min(o+e.options.chunkSize,n.size),u={name:e._getParamName(0),data:r.webkitSlice?r.webkitSlice(o,s):r.slice(o,s),filename:n.upload.filename,chunkIndex:i};n.upload.chunks[i]={file:n,index:i,dataBlock:u,status:l.UPLOADING,progress:0,retries:0},e._uploadData(t,[u])}};if(n.upload.finishedChunkUpload=function(i){var r=!0;i.status=l.SUCCESS,i.dataBlock=null;for(var a=0;a<n.upload.totalChunkCount;a++){if(void 0===n.upload.chunks[a])return o();n.upload.chunks[a].status!==l.SUCCESS&&(r=!1)}r&&e.options.chunksUploaded(n,function(){e._finished(t,"",null)})},e.options.parallelChunkUploads)for(var s=0;s<n.upload.totalChunkCount;s++)o();else o()}else{for(var u=[],h=0;h<t.length;h++)u[h]={name:e._getParamName(h),data:i[h],filename:t[h].upload.filename};e._uploadData(t,u)}})}},{key:"_getChunk",value:function(t,e){for(var i=0;i<t.upload.totalChunkCount;i++)if(void 0!==t.upload.chunks[i]&&t.upload.chunks[i].xhr===e)return t.upload.chunks[i]}},{key:"_uploadData",value:function(t,e){for(var i=this,n=new XMLHttpRequest,r=t,a=!0,o=0,r=a?r:r[Symbol.iterator]();;){var s;if(a){if(o>=r.length)break;s=r[o++]}else{if(o=r.next(),o.done)break;s=o.value}var u=s;u.xhr=n}t[0].upload.chunked&&(t[0].upload.chunks[e[0].chunkIndex].xhr=n);var h=this.resolveOption(this.options.method,t),c=this.resolveOption(this.options.url,t);n.open(h,c,!0),n.timeout=this.resolveOption(this.options.timeout,t),n.withCredentials=!!this.options.withCredentials,n.onload=function(e){i._finishedUploading(t,n,e)},n.onerror=function(){i._handleUploadError(t,n)};var d=null!=n.upload?n.upload:n;d.onprogress=function(e){return i._updateFilesUploadProgress(t,n,e)};var p={Accept:"application/json","Cache-Control":"no-cache","X-Requested-With":"XMLHttpRequest"};this.options.headers&&l.extend(p,this.options.headers);for(var f in p){var g=p[f];g&&n.setRequestHeader(f,g)}var m=new FormData;if(this.options.params){var v=this.options.params;"function"==typeof v&&(v=v.call(this,t,n,t[0].upload.chunked?this._getChunk(t[0],n):null));for(var y in v){var _=v[y];m.append(y,_)}}for(var b=t,x=!0,w=0,b=x?b:b[Symbol.iterator]();;){var M;if(x){if(w>=b.length)break;M=b[w++]}else{if(w=b.next(),w.done)break;M=w.value}var S=M;this.emit("sending",S,n,m)}this.options.uploadMultiple&&this.emit("sendingmultiple",t,n,m),this._addFormElementData(m);for(var k=0;k<e.length;k++){var D=e[k];m.append(D.name,D.data,D.filename)}this.submitRequest(n,m,t)}},{key:"_transformFiles",value:function(t,e){for(var i=this,n=[],r=0,a=function(a){i.options.transformFile.call(i,t[a],function(i){n[a]=i,++r===t.length&&e(n)})},o=0;o<t.length;o++)a(o)}},{key:"_addFormElementData",value:function(t){if("FORM"===this.element.tagName)for(var e=this.element.querySelectorAll("input, textarea, select, button"),i=!0,n=0,e=i?e:e[Symbol.iterator]();;){var r;if(i){if(n>=e.length)break;r=e[n++]}else{if(n=e.next(),n.done)break;r=n.value}var a=r,o=a.getAttribute("name"),s=a.getAttribute("type");if(s&&(s=s.toLowerCase()),"undefined"!=typeof o&&null!==o)if("SELECT"===a.tagName&&a.hasAttribute("multiple"))for(var l=a.options,u=!0,h=0,l=u?l:l[Symbol.iterator]();;){var c;if(u){if(h>=l.length)break;c=l[h++]}else{if(h=l.next(),h.done)break;c=h.value}var d=c;d.selected&&t.append(o,d.value)}else(!s||"checkbox"!==s&&"radio"!==s||a.checked)&&t.append(o,a.value)}}},{key:"_updateFilesUploadProgress",value:function(t,e,i){var n=void 0;if("undefined"!=typeof i){if(n=100*i.loaded/i.total,t[0].upload.chunked){var r=t[0],a=this._getChunk(r,e);a.progress=n,a.total=i.total,a.bytesSent=i.loaded;r.upload.progress=0,r.upload.total=0,r.upload.bytesSent=0;for(var o=0;o<r.upload.totalChunkCount;o++)void 0!==r.upload.chunks[o]&&void 0!==r.upload.chunks[o].progress&&(r.upload.progress+=r.upload.chunks[o].progress,r.upload.total+=r.upload.chunks[o].total,r.upload.bytesSent+=r.upload.chunks[o].bytesSent);r.upload.progress=r.upload.progress/r.upload.totalChunkCount}else for(var s=t,l=!0,u=0,s=l?s:s[Symbol.iterator]();;){var h;if(l){if(u>=s.length)break;h=s[u++]}else{if(u=s.next(),u.done)break;h=u.value}var c=h;c.upload.progress=n,c.upload.total=i.total,c.upload.bytesSent=i.loaded}for(var d=t,p=!0,f=0,d=p?d:d[Symbol.iterator]();;){var g;if(p){if(f>=d.length)break;g=d[f++]}else{if(f=d.next(),f.done)break;g=f.value}var m=g;this.emit("uploadprogress",m,m.upload.progress,m.upload.bytesSent)}}else{var v=!0;n=100;for(var y=t,_=!0,b=0,y=_?y:y[Symbol.iterator]();;){var x;if(_){if(b>=y.length)break;x=y[b++]}else{if(b=y.next(),b.done)break;x=b.value}var w=x;100===w.upload.progress&&w.upload.bytesSent===w.upload.total||(v=!1),w.upload.progress=n,w.upload.bytesSent=w.upload.total}if(v)return;for(var M=t,S=!0,k=0,M=S?M:M[Symbol.iterator]();;){var D;if(S){if(k>=M.length)break;D=M[k++]}else{if(k=M.next(),k.done)break;D=k.value}var T=D;this.emit("uploadprogress",T,n,T.upload.bytesSent)}}}},{key:"_finishedUploading",value:function(t,e,i){var n=void 0;if(t[0].status!==l.CANCELED&&4===e.readyState){if("arraybuffer"!==e.responseType&&"blob"!==e.responseType&&(n=e.responseText,e.getResponseHeader("content-type")&&~e.getResponseHeader("content-type").indexOf("application/json")))try{n=JSON.parse(n)}catch(r){i=r,n="Invalid JSON response from server."}this._updateFilesUploadProgress(t),200<=e.status&&e.status<300?t[0].upload.chunked?t[0].upload.finishedChunkUpload(this._getChunk(t[0],e)):this._finished(t,n,i):this._handleUploadError(t,e,n)}}},{key:"_handleUploadError",value:function(t,e,i){if(t[0].status!==l.CANCELED){if(t[0].upload.chunked&&this.options.retryChunks){var n=this._getChunk(t[0],e);if(n.retries++<this.options.retryChunksLimit)return void this._uploadData(t,[n.dataBlock]);console.warn("Retried this chunk too often. Giving up.")}for(var r=t,a=!0,o=0,r=a?r:r[Symbol.iterator]();;){var s;if(a){if(o>=r.length)break;s=r[o++]}else{if(o=r.next(),o.done)break;s=o.value}this._errorProcessing(t,i||this.options.dictResponseError.replace("{{statusCode}}",e.status),e)}}}},{key:"submitRequest",value:function(t,e,i){t.send(e)}},{key:"_finished",value:function(t,e,i){for(var n=t,r=!0,a=0,n=r?n:n[Symbol.iterator]();;){var o;if(r){if(a>=n.length)break;o=n[a++]}else{if(a=n.next(),a.done)break;o=a.value}var s=o;s.status=l.SUCCESS,this.emit("success",s,e,i),this.emit("complete",s)}if(this.options.uploadMultiple&&(this.emit("successmultiple",t,e,i),this.emit("completemultiple",t)),this.options.autoProcessQueue)return this.processQueue()}},{key:"_errorProcessing",value:function(t,e,i){for(var n=t,r=!0,a=0,n=r?n:n[Symbol.iterator]();;){var o;if(r){if(a>=n.length)break;o=n[a++]}else{if(a=n.next(),a.done)break;o=a.value}var s=o;s.status=l.ERROR,this.emit("error",s,e,i),this.emit("complete",s)}if(this.options.uploadMultiple&&(this.emit("errormultiple",t,e,i),this.emit("completemultiple",t)),this.options.autoProcessQueue)return this.processQueue()}}],[{key:"uuidv4",value:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var e=16*Math.random()|0,i="x"===t?e:3&e|8;return i.toString(16)})}}]),l}(s);l.initClass(),l.version="5.4.0",l.options={},l.optionsForElement=function(t){return t.getAttribute("id")?l.options[h(t.getAttribute("id"))]:void 0},l.instances=[],l.forElement=function(t){if("string"==typeof t&&(t=document.querySelector(t)),null==(null!=t?t.dropzone:void 0))throw new Error("No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.");return t.dropzone},l.autoDiscover=!0,l.discover=function(){var t=void 0;if(document.querySelectorAll)t=document.querySelectorAll(".dropzone");else{t=[];var e=function(e){return function(){for(var i=[],n=e,r=!0,a=0,n=r?n:n[Symbol.iterator]();;){var o;if(r){if(a>=n.length)break;o=n[a++]}else{if(a=n.next(),a.done)break;o=a.value}var s=o;/(^| )dropzone($| )/.test(s.className)?i.push(t.push(s)):i.push(void 0)}return i}()};e(document.getElementsByTagName("div")),e(document.getElementsByTagName("form"))}return function(){for(var e=[],i=t,n=!0,r=0,i=n?i:i[Symbol.iterator]();;){var a;if(n){if(r>=i.length)break;a=i[r++]}else{if(r=i.next(),r.done)break;a=r.value}var o=a;l.optionsForElement(o)!==!1?e.push(new l(o)):e.push(void 0)}return e}()},l.blacklistedBrowsers=[/opera.*(Macintosh|Windows Phone).*version\/12/i],l.isBrowserSupported=function(){var t=!0;if(window.File&&window.FileReader&&window.FileList&&window.Blob&&window.FormData&&document.querySelector)if("classList"in document.createElement("a"))for(var e=l.blacklistedBrowsers,i=!0,n=0,e=i?e:e[Symbol.iterator]();;){var r;if(i){if(n>=e.length)break;r=e[n++]}else{if(n=e.next(),n.done)break;r=n.value}var a=r;a.test(navigator.userAgent)&&(t=!1)}else t=!1;else t=!1;return t},l.dataURItoBlob=function(t){for(var e=atob(t.split(",")[1]),i=t.split(",")[0].split(":")[1].split(";")[0],n=new ArrayBuffer(e.length),r=new Uint8Array(n),a=0,o=e.length,s=0<=o;s?a<=o:a>=o;s?a++:a--)r[a]=e.charCodeAt(a);return new Blob([n],{type:i})};var u=function(t,e){return t.filter(function(t){return t!==e}).map(function(t){return t})},h=function(t){return t.replace(/[\-_](\w)/g,function(t){return t.charAt(1).toUpperCase()})};l.createElement=function(t){var e=document.createElement("div");return e.innerHTML=t,e.childNodes[0]},l.elementInside=function(t,e){if(t===e)return!0;for(;t=t.parentNode;)if(t===e)return!0;return!1},l.getElement=function(t,e){var i=void 0;if("string"==typeof t?i=document.querySelector(t):null!=t.nodeType&&(i=t),null==i)throw new Error("Invalid `"+e+"` option provided. Please provide a CSS selector or a plain HTML element.");return i},l.getElements=function(t,e){var i=void 0,n=void 0;if(t instanceof Array){n=[];try{for(var r=t,a=!0,o=0,r=a?r:r[Symbol.iterator]();;){if(a){if(o>=r.length)break;i=r[o++]}else{if(o=r.next(),o.done)break;i=o.value}n.push(this.getElement(i,e))}}catch(s){n=null}}else if("string"==typeof t){n=[];for(var l=document.querySelectorAll(t),u=!0,h=0,l=u?l:l[Symbol.iterator]();;){if(u){if(h>=l.length)break;i=l[h++]}else{if(h=l.next(),h.done)break;i=h.value}n.push(i)}}else null!=t.nodeType&&(n=[t]);if(null==n||!n.length)throw new Error("Invalid `"+e+"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.");return n},l.confirm=function(t,e,i){return window.confirm(t)?e():null!=i?i():void 0},l.isValidFile=function(t,e){if(!e)return!0;e=e.split(",");for(var i=t.type,n=i.replace(/\/.*$/,""),r=e,a=!0,o=0,r=a?r:r[Symbol.iterator]();;){var s;if(a){if(o>=r.length)break;s=r[o++]}else{if(o=r.next(),o.done)break;s=o.value}var l=s;if(l=l.trim(),"."===l.charAt(0)){if(t.name.toLowerCase().indexOf(l.toLowerCase(),t.name.length-l.length)!==-1)return!0}else if(/\/\*$/.test(l)){if(n===l.replace(/\/.*$/,""))return!0}else if(i===l)return!0}return!1},"undefined"!=typeof jQuery&&null!==jQuery&&(jQuery.fn.dropzone=function(t){return this.each(function(){return new l(this,t)})}),"undefined"!=typeof t&&null!==t?t.exports=l:window.Dropzone=l,l.ADDED="added",l.QUEUED="queued",l.ACCEPTED=l.QUEUED,l.UPLOADING="uploading",l.PROCESSING=l.UPLOADING,l.CANCELED="canceled",l.ERROR="error",l.SUCCESS="success";var c=function(t){var e=(t.naturalWidth,t.naturalHeight),i=document.createElement("canvas");i.width=1,i.height=e;var n=i.getContext("2d");n.drawImage(t,0,0);for(var r=n.getImageData(1,0,1,e),a=r.data,o=0,s=e,l=e;l>o;){var u=a[4*(l-1)+3];0===u?s=l:o=l,l=s+o>>1}var h=l/e;return 0===h?1:h},d=function(t,e,i,n,r,a,o,s,l,u){var h=c(e);return t.drawImage(e,i,n,r,a,o,s,l,u/h)},p=function(){function t(){n(this,t)}return o(t,null,[{key:"initClass",value:function(){this.KEY_STR="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="}},{key:"encode64",value:function(t){for(var e="",i=void 0,n=void 0,r="",a=void 0,o=void 0,s=void 0,l="",u=0;;)if(i=t[u++],n=t[u++],r=t[u++],a=i>>2,o=(3&i)<<4|n>>4,s=(15&n)<<2|r>>6,l=63&r,isNaN(n)?s=l=64:isNaN(r)&&(l=64),e=e+this.KEY_STR.charAt(a)+this.KEY_STR.charAt(o)+this.KEY_STR.charAt(s)+this.KEY_STR.charAt(l),i=n=r="",a=o=s=l="",!(u<t.length))break;return e}},{key:"restore",value:function(t,e){if(!t.match("data:image/jpeg;base64,"))return e;var i=this.decode64(t.replace("data:image/jpeg;base64,","")),n=this.slice2Segments(i),r=this.exifManipulation(e,n);return"data:image/jpeg;base64,"+this.encode64(r)}},{key:"exifManipulation",value:function(t,e){var i=this.getExifArray(e),n=this.insertExif(t,i),r=new Uint8Array(n);return r}},{key:"getExifArray",value:function(t){for(var e=void 0,i=0;i<t.length;){if(e=t[i],255===e[0]&225===e[1])return e;i++}return[]}},{key:"insertExif",value:function(t,e){var i=t.replace("data:image/jpeg;base64,",""),n=this.decode64(i),r=n.indexOf(255,3),a=n.slice(0,r),o=n.slice(r),s=a;return s=s.concat(e),s=s.concat(o)}},{key:"slice2Segments",value:function(t){for(var e=0,i=[];;){var n;if(255===t[e]&218===t[e+1])break;if(255===t[e]&216===t[e+1])e+=2;else{n=256*t[e+2]+t[e+3];var r=e+n+2,a=t.slice(e,r);i.push(a),e=r}if(e>t.length)break}return i}},{key:"decode64",value:function(t){var e=void 0,i=void 0,n="",r=void 0,a=void 0,o=void 0,s="",l=0,u=[],h=/[^A-Za-z0-9\+\/\=]/g;for(h.exec(t)&&console.warn("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding."),t=t.replace(/[^A-Za-z0-9\+\/\=]/g,"");;)if(r=this.KEY_STR.indexOf(t.charAt(l++)),a=this.KEY_STR.indexOf(t.charAt(l++)),o=this.KEY_STR.indexOf(t.charAt(l++)),s=this.KEY_STR.indexOf(t.charAt(l++)),e=r<<2|a>>4,i=(15&a)<<4|o>>2,n=(3&o)<<6|s,u.push(e),64!==o&&u.push(i),64!==s&&u.push(n),e=i=n="",r=a=o=s="",!(l<t.length))break;return u}}]),t}();p.initClass();var f=function(t,e){var i=!1,n=!0,r=t.document,a=r.documentElement,o=r.addEventListener?"addEventListener":"attachEvent",s=r.addEventListener?"removeEventListener":"detachEvent",l=r.addEventListener?"":"on",u=function d(n){if("readystatechange"!==n.type||"complete"===r.readyState)return("load"===n.type?t:r)[s](l+n.type,d,!1),!i&&(i=!0)?e.call(t,n.type||n):void 0},h=function p(){try{a.doScroll("left")}catch(t){return void setTimeout(p,50)}return u("poll")};if("complete"!==r.readyState){if(r.createEventObject&&a.doScroll){try{n=!t.frameElement}catch(c){}n&&h()}return r[o](l+"DOMContentLoaded",u,!1),r[o](l+"readystatechange",u,!1),t[o](l+"load",u,!1)}};l._autoDiscoverFunction=function(){if(l.autoDiscover)return l.discover()},f(window,l._autoDiscoverFunction)}).call(e,i(123)(t))}